/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const SearchLazyImport = createFileRoute('/search')()
const ReadIndexLazyImport = createFileRoute('/read/')()
const DetailsIndexLazyImport = createFileRoute('/details/')()
const SeeMoreSectionLazyImport = createFileRoute('/see-more/$section')()
const DetailsMangaLazyImport = createFileRoute('/details/$manga')()
const ReadMangaIndexLazyImport = createFileRoute('/read/$manga/')()
const ReadMangaChapterLazyImport = createFileRoute('/read/$manga/$chapter')()

// Create/Update Routes

const SearchLazyRoute = SearchLazyImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/search.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ReadIndexLazyRoute = ReadIndexLazyImport.update({
  path: '/read/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/read.index.lazy').then((d) => d.Route))

const DetailsIndexLazyRoute = DetailsIndexLazyImport.update({
  path: '/details/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/details.index.lazy').then((d) => d.Route))

const SeeMoreSectionLazyRoute = SeeMoreSectionLazyImport.update({
  path: '/see-more/$section',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/see-more.$section.lazy').then((d) => d.Route),
)

const DetailsMangaLazyRoute = DetailsMangaLazyImport.update({
  path: '/details/$manga',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/details.$manga.lazy').then((d) => d.Route),
)

const ReadMangaIndexLazyRoute = ReadMangaIndexLazyImport.update({
  path: '/read/$manga/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/read.$manga.index.lazy').then((d) => d.Route),
)

const ReadMangaChapterLazyRoute = ReadMangaChapterLazyImport.update({
  path: '/read/$manga/$chapter',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/read.$manga.$chapter.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      preLoaderRoute: typeof SearchLazyImport
      parentRoute: typeof rootRoute
    }
    '/details/$manga': {
      preLoaderRoute: typeof DetailsMangaLazyImport
      parentRoute: typeof rootRoute
    }
    '/see-more/$section': {
      preLoaderRoute: typeof SeeMoreSectionLazyImport
      parentRoute: typeof rootRoute
    }
    '/details/': {
      preLoaderRoute: typeof DetailsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/read/': {
      preLoaderRoute: typeof ReadIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/read/$manga/$chapter': {
      preLoaderRoute: typeof ReadMangaChapterLazyImport
      parentRoute: typeof rootRoute
    }
    '/read/$manga/': {
      preLoaderRoute: typeof ReadMangaIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  SearchLazyRoute,
  DetailsMangaLazyRoute,
  SeeMoreSectionLazyRoute,
  DetailsIndexLazyRoute,
  ReadIndexLazyRoute,
  ReadMangaChapterLazyRoute,
  ReadMangaIndexLazyRoute,
])

/* prettier-ignore-end */
