/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ReadIndexImport } from './routes/read.index'
import { Route as DetailsIndexImport } from './routes/details.index'
import { Route as ReadChapterImport } from './routes/read.$chapter'
import { Route as DetailsMangaImport } from './routes/details.$manga'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ReadIndexRoute = ReadIndexImport.update({
  path: '/read/',
  getParentRoute: () => rootRoute,
} as any)

const DetailsIndexRoute = DetailsIndexImport.update({
  path: '/details/',
  getParentRoute: () => rootRoute,
} as any)

const ReadChapterRoute = ReadChapterImport.update({
  path: '/read/$chapter',
  getParentRoute: () => rootRoute,
} as any)

const DetailsMangaRoute = DetailsMangaImport.update({
  path: '/details/$manga',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/details/$manga': {
      preLoaderRoute: typeof DetailsMangaImport
      parentRoute: typeof rootRoute
    }
    '/read/$chapter': {
      preLoaderRoute: typeof ReadChapterImport
      parentRoute: typeof rootRoute
    }
    '/details/': {
      preLoaderRoute: typeof DetailsIndexImport
      parentRoute: typeof rootRoute
    }
    '/read/': {
      preLoaderRoute: typeof ReadIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  DetailsMangaRoute,
  ReadChapterRoute,
  DetailsIndexRoute,
  ReadIndexRoute,
])

/* prettier-ignore-end */
